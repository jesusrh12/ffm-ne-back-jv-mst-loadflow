name: Pull-azure
on:
 push:
   branches:
      - main # or the name of your main branch
      
jobs:  

  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Configure AWS Credentials for build and deploy
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: us-east-2        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
          
      - name: ecr 
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: squad-integration   
          IMAGE_TAG: ${{env.LATEST_TAG}}
        run:  |
          aws ecr list-images --repository-name $ECR_REPOSITORY
        #  docker pull $ECR_REGISTRY/$ECR_REPOSITORY:1.12
      - name: docker images
        run: docker images
  
  push_azure:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
    - name: 'Build and push image'
      uses: docker/login-action@v1
      with:
          login-server: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
    - run: |     
       docker login $AZURE_REGISTRY_LOGIN_SERVER -u $AZURE_REGISTRY_USERNAME -p $AZURE_REGISTRY_PASSWORD
   #    docker images
   #     docker images azacreu2ossd01.azurecr.io
   #     az acr repository list -n azacreu2ossd01.azurecr.io
   #     azure aks list-images --repository-name $AZURE_REGISTRY_LOGIN_SERVER
   #    docker build . -t ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
